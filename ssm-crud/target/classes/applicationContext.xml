<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:component-scan base-package="com.luchienlin">
	<!-- 不掃控制器 -->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<!-- Spring的配置文件，這裡主要配置和業務邏輯有關的 -->
	<!-- 數據源，事務控制 ...-->
	<context:property-placeholder location="classpath:dbconfig.properties"/>
	
	<bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
<!--====================================mybatis====================================== -->		
	<!-- 配置myBatis整合 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 指定myBatis全局配置文件的位置 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<property name="dataSource" ref="pooledDataSource"></property>
		<!-- 指定mybatis，mapper文件的位置 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
	</bean>
	
	<!-- 配置掃描器：將mybatis接口實現加入到ioc容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 掃描所有dao接口實現，加入到ioc容器 -->
		<property name="basePackage" value="com.luchienlin.crud.dao"></property>
	</bean>
	
	<!-- 配置一個可以執行批量的sqlSession -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
		<constructor-arg name="executorType" value="BATCH"></constructor-arg>
	</bean>
	
<!--====================================事務控制====================================== -->	
	<!-- 事務管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 控制住數據源 -->
		<property name="dataSource" ref="pooledDataSource"></property>
	</bean>
	
	<!-- 開啟基於註解的事物，使用xml配置形式的事務(必須主要的都是使用配置式) -->
	<aop:config>
		<!-- 切入點表達式 -->
		<aop:pointcut expression="execution(* com.luchienlin.crud.service..*(..))" id="txPoint"></aop:pointcut>
		<!-- 配置事務增強 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
	</aop:config>
	
	<!-- 配置事務增強，事務如何切入 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 所有方法都是事務方法 -->
			<tx:method name="*"></tx:method>
			<!-- get開始的所有方法 -->
			<tx:method name="get*" read-only="true"></tx:method>
		</tx:attributes>
	</tx:advice>
	
	<!-- Spring配置文件核心點(數據源、與Mybatis整合、事務控制) -->
	
</beans>
 